{% extends "base_front.html.twig" %}
{% block title %}
	<title>Articles</title>
{% endblock %}
{% block stylesheets %}
 <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css" rel="stylesheet">
	<link rel="stylesheet" href="{{ asset('front/css/article.css') }}">
	<style>
		.new_article{
			display:none ;
		}
		.error_form p{
			padding-left : 25px;
			color : #fff;
			font-size : 13px;
		}
	</style>
{% endblock %}
{% block body %}

<div class="site-blocks-cover overlay" style="background-image: url({{ asset('front/images/fond.jpg') }});" data-aos="fade" data-stellar-background-ratio="0.5">
	<div class="container">
		<div class="row align-items-center justify-content-center text-center">

			<div class="col-md-12">
				<div class="row justify-content-center mb-4">
					<div class="col-md-8 text-center">
						<h1 class="" data-aos="fade-up">Articles publi√©s</h1>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
{# add article #}
<div class="site-section bg-light">
	<div class="container">
		<div class="row mb-5">
			<div class="col-md-7">
				<a href="#" class="btn btn-primary" id="btn_cache_new_article">
					<span class="fa fa-plus ml-2"></span>
					<span class="ml-2">Nouveau article</span>
				</a>
			</div>
		</div>
		<div class="row justify-content-center mb-5 new_article">
			<div class="col-md-7 text-center border-primary">
				<h2 class="font-weight-light text-primary">Ajouter un article</h2>
			</div>
		</div>
		<form action="" id="form_article" class="new_article">
			<div class="form-group">
				<label for="titre">Titre de l'article</label>
				<input type="text" placeholder="Titre de l'article" name="" id="titre" class="form-control">
			</div>
			<div class="form-group">
				<label>Inserer un ou plusieurs images</label>
				{# image #}
				<div class="field" align="left">
					<input type="file" id="filesImages" name="filesImages[]" multiple/>
				</div>
				{# /image #}

			</div>
			<div class="form-group">
				<label>Inserer un ou plusieurs fichiers (*.pdf, ...)</label>
				{# image #}
				<div class="field" align="left">
					<input type="file" id="filesFiles" name="filesFiles[]" multiple/>
				</div>
				{# /image #}

			</div>

			<div class="form-group">
				<label>Inserer une video</label>
				<div id="div_video_article">
					<input id="input_video_article" type="file" accept="video/*">
					<video id="video" width="300" height="300" controls></video>
				</div>
			</div>
			<div class="form-group">
				<label for="contenu">Contenu</label>
				<textarea placeholder="Contenu de l'article" name="" id="contenu" cols="30" rows="10" class="form-control"></textarea>
			</div>
			<div class="form-group">
				
				<div id="progress-wrp" class="progress" style = "display:none">
					<div class="progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100"></div >
					{# <div class="status">0%</div> #}
				</div>
			</div>
			<div class="form-group">
				<div class="error_form bg-danger" style="display:none;">
					<p></p>
				</div>
				<button id="add_article" class="btn btn-primary">
					Enregistrer
				</button>
				<button class="btn btn-warning" id="btn_reset">Annuler</button>
			</div>
		</form>

	</div>
</div>
{# fin add artcle #}
{# articles #}
<div class="site-section bg-light">
	<div class="container">
		<div class="row justify-content-center mb-5">
			<div class="col-md-7 text-center border-primary">
				<h2 class="font-weight-light text-primary">Nos articles</h2>
				{# <p class="color-black-opacity-5">See Our Daily News &amp; Updates</p> #}
			</div>
		</div>
		<div class="row mb-3 align-items-stretch">
			
			{% for article in pagination %}

				{% set file_image = null %}
				{% set break = false %}

				{% for file in article.fileUploads %}
					{% if file.filetype == "image" %}
						{% set file_image = file %}
						{% set break = true %}
					{% endif %}
				{% endfor %}
				<div class="col-md-6 col-lg-4 mb-4 mb-lg-4">
					<div class="h-entry">
						{% if file_image %}
							<img src="{{ asset('uploads/article/images/' ~ file_image.url) }}" alt="{{ file_image.url }}" 
							class="img-fluid rounded">
						{% endif %}
						<h2 class="font-size-regular">
							<a href="#" class="text-black">{{ article.titre }}</a>
						</h2>
						<div class="meta mb-3">by {{ article.membre.nom }}<span class="mx-1">&bullet;</span>
							{{ article.createdAt|date('d-m-Y H:i') }}
							<span class="mx-1">&bullet;</span>
							<div>
								<a href="{{ path('article', {'id': article.id }) }}">Voir details</a>
							</div>
						</div>
						{% set some_html = article.contenu|raw %}
						<p class="p_truncate text-truncate">{{ some_html[:150]|striptags ~ ' ...' }}</p>
					</div>
				</div>
			{% endfor %}
			<div class="col-12 text-center mt-4">
				<div class="navigation">
					{{ knp_pagination_render(pagination) }}
				</div>
			</div>
		</div>
	</div>
</div>

{# article #}


{% endblock %}
{% block javascripts %}
<script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>

	<script>
		// Replace the <textarea id="editor1"> with a CKEditor 4
		// instance, using default configuration.
		$(document).ready(function() {

			$('#btn_cache_new_article').click(function(params) {
				params.preventDefault();
				$(".new_article").fadeIn();
				$(".justify-content-center").css("display", "flex");
			})

            $('#contenu').summernote({
				onChange : function(){
					$(".error_form").fadeOut();
				},
                callbacks: {
					onImageUpload: function(files) {
						for(let i=0; i < files.length; i++) {
							$.upload(files[i]);
						}
					}
				},
				
				toolbar: [
					[ 'style', [ 'style' ] ],
					[ 'font', [ 'bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear'] ],
					[ 'fontname', [ 'fontname' ] ],
					[ 'fontsize', [ 'fontsize' ] ],
					[ 'color', [ 'color' ] ],
					[ 'para', [ 'ol', 'ul', 'paragraph', 'height' ] ],
					[ 'table', [ 'table' ] ],
					[ 'insert', [ 'link'] ],
					[ 'view', [ 'undo', 'redo', 'fullscreen', 'codeview', 'help' ] ]
				],
				height: 500,
            });

			// send the file

			$.upload = function (file) {
				let out = new FormData();
				out.append('file', file, file.name);

				$.ajax({
					method: 'POST',
					url: '{{ path("summernote_add_image") }}',
					contentType: false,
					cache: false,
					processData: false,
					data: out,
					success: function (img) {
						if(image != "error"){
							$('#contenu').summernote('insertImage', img);
						}
					},
					error: function (jqXHR, textStatus, errorThrown) {
						console.error(textStatus + " " + errorThrown);
					}
				});
			};

        });
		
		// video traitement

		const input = document.getElementById('input_video_article');
		const video = document.getElementById('video');
		const videoSource = document.createElement('source');

		input.addEventListener('change', function() {
			const files = this.files || [];

			if (!files.length) return;
			
			const reader = new FileReader();

			reader.onload = function (e) {
				videoSource.setAttribute('src', e.target.result);
				video.appendChild(videoSource);
				video.load();
				video.play();
			};
	
			reader.onprogress = function (e) {
				console.log('progress: ', Math.round((e.loaded * 100) / e.total));
			};
			
			reader.readAsDataURL(files[0]);
		});

		$(document).ready(function() {
			if (window.File && window.FileList && window.FileReader) {
				$("#filesImages").on("change", function(e) {
					var files = e.target.files,
						filesLength = files.length;
					for (var i = 0; i < filesLength; i++) {
						var f = files[i]
						var fileReader = new FileReader();
						fileReader.onload = (function(e) {
						var file = e.target;
						$("<span class=\"pip\">" +
							"<img class=\"imageThumb\" src=\"" + e.target.result + "\" title=\"" + file.name + "\"/>" +
							"<br/><span class=\"remove\">Effacer</span>" +
							"</span>").insertAfter("#filesImages");
						$(".remove").click(function(){
							$(this).parent(".pip").remove();
						});
						
						});
						fileReader.readAsDataURL(f);
					}
						console.log(files);
				});

			} else {
				alert("Your browser doesn't support to File API")
			}
			$("#btn_reset").click(function(ev){
				ev.preventDefault();
				$("#form_article")[0].reset();
				$(".new_article").fadeOut();
			})

			$("#titre, #contenu").focus(function(){
				$(".error_form").fadeOut();
			})

			$("#form_article").on("submit", function(ev){
				ev.preventDefault();
				
				var titre = $("#titre").val();
				var contenu_is_empty = $("#contenu").summernote("isEmpty");
				
				if(titre == "" && contenu_is_empty == true){
					$(".error_form p").text("Veuillez renseigner le champ titre et contenu");
					$(".error_form").fadeIn();
				}else{

					var formData = new FormData();

					var files_imagesLength = document.getElementById('filesImages').files.length;
					var files_filesLength = document.getElementById('filesFiles').files.length;
					//input_video_article
					formData.append("file_video", document.getElementById('input_video_article').files[0]);
					console.log(document.getElementById('input_video_article').files[0])
					formData.append("titre", document.getElementById('titre').value);
					formData.append("contenu", document.getElementById('contenu').value);
					formData.append("user_id", "{{ app.user ? app.user.id : "" }}");

					//console.log(files_imagesLength);
					for(var i=0;i<files_imagesLength;i++){
						formData.append("file_images[]", document.getElementById('filesImages').files[i]);
					}

					for(var i=0;i<files_filesLength;i++){
						formData.append("file_files[]", document.getElementById('filesFiles').files[i]);
					}

					$.ajax({
						url : '{{ path("add_article") }}',
						type: 'POST',
						data: formData,
						contentType: false,
						cache: false,
						processData: false,
						beforeSend : function(){
							$("#progress-wrp").fadeIn();
							$("#add_article").text("Patienter ...");
						},
						xhr: function(){
							//upload Progress
							var xhr = $.ajaxSettings.xhr();
							if (xhr.upload) {
								xhr.upload.addEventListener('progress', function(event) {
									var percent = 0;
									var position = event.loaded || event.position;
									var total = event.total;
									if (event.lengthComputable)
									{
										percent = Math.ceil(position / total * 100);
									}
									//update progressbar
									$(".progress-bar").css("width", + percent +"%");
									//$(".status").text(percent +"%");
								}, true);
							}
							return xhr;
						},
						success: function (html) {
							if(html == "ok"){
								window.location.reload();
							}
						},
						complete : function(){
							$("#form_article")[0].reset();
							$('#contenu').summernote('code', '<p><br></p>');
							$("#progress-wrp").fadeOut();
							$("#add_article").text("Enregistrer");
							$(".new_article").fadeOut();
						}

					});
				}
			})

			
		});

	</script>

{% endblock %}